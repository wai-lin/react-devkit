/* eslint-disable @next/next/no-page-custom-font */
import '../src/components/index.css'
import { AppProps } from 'next/app'
import Head from 'next/head'
import { createContext, Dispatch, FC, SetStateAction, useState } from 'react'

import Header from '../partials/Header'
import Navigation from '../partials/Navigation'
import WithMDXSyntaxHighlight from '../partials/MDXSyntaxHighlight'
import ScrollTopBtn from '../partials/ScrollTop'

// AppContext
interface IAppContext {
  theme: 'light' | 'dark'
  setTheme: Dispatch<SetStateAction<'light' | 'dark'>> | undefined
}
const AppContext = createContext<IAppContext>({
  theme: 'light',
  setTheme: undefined,
})

// App
const App: FC<AppProps> = ({ Component, pageProps }) => {
  // theme
  const [theme, setTheme] = useState<'light' | 'dark'>('light')
  return (
    <AppContext.Provider value={{ theme, setTheme }}>
      <Head>
        <title>React Tailwind Components</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://fonts.googleapis.com/css2?family=Josefin+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap"
          rel="stylesheet"
        />
      </Head>
      <div className="important">
        <div className={theme === 'dark' ? 'dark' : ''}>
          <Header />
          <div className="flex max-h-screen h-screen overflow-hidden dark:text-white">
            <Navigation className="flex-none" />
            <div
              id="main-content"
              className="relative flex-auto mt-16 pt-8 pb-20 px-16 overflow-auto dark:bg-gray-800"
            >
              <WithMDXSyntaxHighlight>
                <Component {...pageProps} />
              </WithMDXSyntaxHighlight>
              <ScrollTopBtn className="fixed right-8 bottom-8" />
            </div>
          </div>
        </div>
      </div>
      <style global jsx>{`
        body {
          font-family: 'Josefin Sans', sans-serif;
        }
        #main-content {
          height: calc(100vh - 4rem);
        }
      `}</style>
    </AppContext.Provider>
  )
}

export { App as default, AppContext }
